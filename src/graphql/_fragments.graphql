fragment PostFields on Post {
  mirroredByMe @client
  id
  reaction(request: $reactionRequest)
  profile {
    ...ProfileFields
  }
  collectedBy {
    address
    defaultProfile {
      ...MinimalProfileFields
    }
  }
  referenceModule {
    __typename
  }
  canComment(profileId: $channelId) {
    result
  }
  canMirror(profileId: $channelId) {
    result
  }
  collectModule {
    ...CollectModuleFields
  }
  collectNftAddress
  onChainContentURI
  hidden
  hasCollectedByMe
  stats {
    totalAmountOfComments
    totalAmountOfCollects
    totalAmountOfMirrors
    totalUpvotes
    totalDownvotes
  }
  metadata {
    name
    description
    content
    contentWarning
    mainContentFocus
    tags
    media {
      original {
        url
        mimeType
      }
    }
    cover {
      original {
        url
      }
    }
    attributes {
      value
      traitType
    }
  }
  createdAt
  appId
}

fragment ProfileFields on Profile {
  id
  name
  handle
  bio
  ownedBy
  isDefault
  isFollowedByMe
  dispatcher {
    canUseRelay
  }
  attributes {
    key
    value
  }
  stats {
    totalFollowers
    totalFollowing
    totalPosts
  }
  coverPicture {
    ... on MediaSet {
      original {
        url
      }
    }
    ... on NftImage {
      uri
    }
  }
  picture {
    ... on MediaSet {
      original {
        url
      }
    }
    ... on NftImage {
      uri
    }
  }
  followModule {
    __typename
  }
}

fragment CollectModuleFields on CollectModule {
  ... on FreeCollectModuleSettings {
    type
    contractAddress
    followerOnly
  }
  ... on FeeCollectModuleSettings {
    type
    recipient
    referralFee
    contractAddress
    followerOnly
    amount {
      asset {
        symbol
        decimals
        address
      }
      value
    }
  }
  ... on LimitedFeeCollectModuleSettings {
    type
    collectLimit
    recipient
    referralFee
    contractAddress
    followerOnly
    amount {
      asset {
        symbol
        decimals
        address
      }
      value
    }
  }
  ... on LimitedTimedFeeCollectModuleSettings {
    type
    collectLimit
    recipient
    endTimestamp
    referralFee
    contractAddress
    followerOnly
    amount {
      asset {
        symbol
        decimals
        address
      }
      value
    }
  }
  ... on TimedFeeCollectModuleSettings {
    type
    recipient
    endTimestamp
    referralFee
    contractAddress
    followerOnly
    amount {
      asset {
        symbol
        decimals
        address
      }
      value
    }
  }
}

fragment MirrorFields on Mirror {
  id
  profile {
    name
    handle
  }
  reaction(request: $reactionRequest)
  collectModule {
    ...CollectModuleFields
  }
  stats {
    totalUpvotes
    totalAmountOfMirrors
    totalAmountOfCollects
    totalAmountOfComments
  }
  metadata {
    ...MetadataFields
  }
  mirrorOf {
    ... on Post {
      id
      profile {
        ...ProfileFields
      }
      metadata {
        ...MetadataFields
      }
      reaction(request: $reactionRequest)
      stats {
        totalUpvotes
        totalAmountOfMirrors
        totalAmountOfCollects
        totalAmountOfComments
      }
    }
    ... on Comment {
      id
      profile {
        ...ProfileFields
      }
      reaction(request: $reactionRequest)
      stats {
        totalUpvotes
        totalAmountOfMirrors
        totalAmountOfCollects
        totalAmountOfComments
      }
    }
  }
  createdAt
  appId
}

fragment MetadataFields on MetadataOutput {
  name
  description
  content
  contentWarning
  tags
  cover {
    original {
      url
    }
  }
  media {
    original {
      url
      mimeType
    }
  }
  attributes {
    value
    traitType
  }
}

fragment CommentFields on Comment {
  id
  profile {
    ...ProfileFields
  }
  reaction(request: $reactionRequest)
  collectedBy {
    address
    defaultProfile {
      ...MinimalProfileFields
    }
  }
  hidden
  collectModule {
    ...CollectModuleFields
  }
  stats {
    totalDownvotes
    totalUpvotes
  }
  metadata {
    name
    description
    content
    media {
      original {
        url
        mimeType
      }
    }
    attributes {
      traitType
      value
    }
  }
  commentOn {
    ... on Post {
      id
      createdAt
      profile {
        ...ProfileFields
      }
      metadata {
        name
        cover {
          original {
            url
          }
        }
        attributes {
          value
          traitType
        }
      }
    }
  }
  createdAt
  appId
}

fragment CommentFields on Comment {
  id
  profile {
    ...ProfileFields
  }
  reaction(request: $reactionRequest)
  collectedBy {
    address
    defaultProfile {
      ...MinimalProfileFields
    }
  }
  hidden
  collectModule {
    ...CollectModuleFields
  }
  stats {
    totalDownvotes
    totalUpvotes
  }
  metadata {
    name
    description
    content
    media {
      original {
        url
        mimeType
      }
    }
    attributes {
      traitType
      value
    }
  }
  commentOn {
    ... on Post {
      id
      createdAt
      profile {
        ...ProfileFields
      }
      metadata {
        name
        cover {
          original {
            url
          }
        }
        attributes {
          value
          traitType
        }
      }
    }
  }
  createdAt
  appId
}

fragment MinimalProfileFields on Profile {
  id
  name
  handle
  bio
  ownedBy
  attributes {
    key
    value
  }
  picture {
    ... on MediaSet {
      original {
        url
      }
    }
    ... on NftImage {
      uri
    }
  }
  coverPicture {
    ... on MediaSet {
      original {
        url
      }
    }
    ... on NftImage {
      uri
    }
  }
  followModule {
    __typename
  }
  dispatcher {
    canUseRelay
  }
  stats {
    totalFollowers
    totalFollowing
  }
}

fragment RelayerResult on RelayResult {
  ... on RelayerResult {
    txId
    txHash
  }
  ... on RelayError {
    reason
  }
}
